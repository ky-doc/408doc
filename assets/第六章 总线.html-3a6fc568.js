import{_ as r,X as o,Y as e,a0 as s,a2 as n,$ as i,a3 as t,E as l}from"./framework-cd5fce69.js";const g="/408noteImg/images/image-20211025191546092.png",d="/408noteImg/images/image-20211025192113465.png",p="/408noteImg/images/image-20211025192403413.png",c="/408noteImg/images/image-20211025215030153.png",h="/408noteImg/images/image-20211026134408697.png",m="/408noteImg/images/image-20211026140238579.png",u="/408noteImg/images/image-20211026140330442.png",f="/408noteImg/images/image-20211026165026428.png",x="/408noteImg/images/image-20211026200156541.png",_={},b=t('<h2 id="总线概述" tabindex="-1"><a class="header-anchor" href="#总线概述" aria-hidden="true">#</a> 总线概述</h2><p>I/O 设备的种类和数量也越来越多，为了解决 I/O <strong>设备和主机之间连接的灵活性问题</strong>，从分散连接发展为总线连接</p><p>选择题：3 通道的存储器，它每次会输出 3 倍总线宽度的数据</p><p>选择题：<code>PCI-Express</code> 总线都采用串行数据包传输数据</p><h3 id="总线基本概念" tabindex="-1"><a class="header-anchor" href="#总线基本概念" aria-hidden="true">#</a> 总线基本概念</h3><h4 id="总线的定义" tabindex="-1"><a class="header-anchor" href="#总线的定义" aria-hidden="true">#</a> 总线的定义</h4><p>总线是<strong>一组能为多个部件分时共享的公共信息传送线路</strong>，<strong>分时和共享</strong>是总线的两个特点</p><ul><li>分时：<strong>同一时刻只允许有一个部件向总线发送信息</strong>，系统中有多个部件只能分时地向总线发送信息</li><li>共享：总线上可以挂接多个部件，<strong>各个部件之间互相交换的信息都可通过这组线路分时共享</strong></li><li>在某一时刻只允许有一个部件向总线发送信息，但多个部件可同时从总线上接收相同的信息</li></ul><h4 id="总线设备" tabindex="-1"><a class="header-anchor" href="#总线设备" aria-hidden="true">#</a> 总线设备</h4><p>总线上所连接的设备，按其对总线有无控制功能可分为主设备和从设备两种</p><ul><li>主设备：<strong>获得总线控制权的设备</strong></li><li>从设备：被主设备访问的设备，它<strong>只能响应从主设备发来的各种总线命令</strong></li></ul><h4 id="总线特性" tabindex="-1"><a class="header-anchor" href="#总线特性" aria-hidden="true">#</a> 总线特性</h4><ol><li>机械特性：尺寸、形状、管脚数、排列顺序</li><li>电气特性：传输方向和有效的电平范围</li><li>功能特性：每根传输线的功能（地址、数据、控制）</li><li>时间特性：信号的时序关系</li></ol><h4 id="总线的猝发传输方式" tabindex="-1"><a class="header-anchor" href="#总线的猝发传输方式" aria-hidden="true">#</a> 总线的猝发传输方式</h4><p>若使用猝发传输方式在一个总线周期内传输<strong>一次存储地址</strong>就可以<strong>连续读多个数据数据字</strong>，否则<strong>取一个数据字要先传一个地址</strong></p><p>例题：某同步总线的时钟频率为 <code>100MHz</code>，宽度为32位，地址/数据线复用，每传输一个地址或数据占用一个时钟周期。若该总线**支持突发（猝发）**传输方式，则一次“主存写”总线事务传输 128 位数据所需要的时间至少是 <code>50ns</code></p><p>解释：总线时钟周期是 <code>1s/100MHz=10ns</code>，猝发所以地址只需要传一次，而数据需要传 <code>128/32=4</code> 次，所以需要 <code>50ns</code></p><h3 id="总线的分类" tabindex="-1"><a class="header-anchor" href="#总线的分类" aria-hidden="true">#</a> 总线的分类</h3><h4 id="按功能分类" tabindex="-1"><a class="header-anchor" href="#按功能分类" aria-hidden="true">#</a> 按功能分类</h4><ul><li><p>片内总线：<strong>片内总线是芯片内部的总线</strong>，它是 CPU 芯片内部寄存器与寄存器之间、寄存器与 ALU 之间的公共连接线</p></li><li><p>系统总线：系统总线是计算机系统内<strong>各功能部件之间相互连接的总线</strong>，按系统总线传输信息内容的不同分为：</p><ol><li>数据总线：<strong>传输各功能部件之间的数据信息</strong>，它是<strong>双向传输总线</strong>，<strong>位数与机器字长、存储字长有关</strong></li></ol></li></ul><ol start="2"><li>地址总线：指出数据所在的主存或 I/O 端口的地址，它是<strong>单向传输总线</strong>，地址总线的<strong>位数与主存地址空间的大小有关</strong></li><li>控制总线：传输控制信息，包括 CPU 送出的<strong>控制命令</strong>和主存（或外设）返回 CPU 的<strong>反馈信号</strong></li></ol><p>注意区分数据通路和数据总线：<strong>数据通路是数据流经的路径</strong>，而<strong>数据总线是承载的媒介</strong></p><p>选择题：<strong>握手（应答）信号</strong>属于通信联络信号，应在<strong>控制总线</strong>上传输；而<strong>中断信号</strong>会在 CPU 响应后发回<strong>数据总线</strong></p><ul><li>通信总线：通信总线是在<strong>计算机系统之间</strong>或<strong>计算机系统与其他系统</strong>（如远程通信设备、测试设备）之间传送信息的总线，通信总线也称<strong>外部总线</strong></li></ul><h4 id="按数据传输格式分类" tabindex="-1"><a class="header-anchor" href="#按数据传输格式分类" aria-hidden="true">#</a> 按数据传输格式分类</h4><ul><li><p>并行总线：设备间的数据流动是<strong>一位一位地流动</strong>，只需要一条传输线</p><p>优点：适合长距离传输，节省布线空间；缺点：但数据收发时要进行拆卸和装配</p></li><li><p>串行总线：设备间的数据流动是<strong>多位并行地流动</strong>，逻辑时序简单，实现方便，但信号线多</p></li></ul><p>速度比较：总线带宽 = 总线宽度 × 总线频率</p><ul><li>并行总线频率较高时，信号线间产生严重干扰，电子速度是光速级别，信号线不够等长，<strong>无法持续提升工作频率</strong></li><li>而串行总线可以通过不断<strong>提高工作频率来提高传输速度</strong>，最终<strong>超过并行总线</strong></li></ul><h4 id="按时序控制方式分类" tabindex="-1"><a class="header-anchor" href="#按时序控制方式分类" aria-hidden="true">#</a> *按时序控制方式分类</h4><p>分为<strong>同步总线、异步总线</strong>，用于总线的同步定时和异步定时</p><h3 id="系统总线的结构" tabindex="-1"><a class="header-anchor" href="#系统总线的结构" aria-hidden="true">#</a> 系统总线的结构</h3><h4 id="单总线结构" tabindex="-1"><a class="header-anchor" href="#单总线结构" aria-hidden="true">#</a> 单总线结构</h4><p><strong>将 CPU、主存、I/O 设备都挂在一组总线上</strong>，允许 I/O 设备之间、I/O 设备与主存之间直接交换信息，CPU 与主存、CPU 与外设之间可直接进行信息交换，而无须经过中间设备的干预</p><figure><img src="'+g+'" alt="image-20211025191546092" tabindex="0" loading="lazy"><figcaption>image-20211025191546092</figcaption></figure><p>注意：单总线并<strong>不是指只有一根信号线</strong>，系统总线按传送信息的不同可细分为地址总线、数据总线、控制总线</p><p>优点：结构简单，成本低，<strong>易于接入新的设备</strong>；缺点：带宽低、负载重，<strong>多个部件争用唯一的总线，不支持并发传送操作</strong></p><h4 id="双总线结构" tabindex="-1"><a class="header-anchor" href="#双总线结构" aria-hidden="true">#</a> 双总线结构</h4><p>一条是主存总线，用于在 <strong>CPU、主存和通道之间传送数据</strong>；另一条是 I/O 总线，用于在<strong>多个外部设备与通道之间传送数据</strong></p><figure><img src="'+d+'" alt="image-20211025192113465" tabindex="0" loading="lazy"><figcaption>image-20211025192113465</figcaption></figure><p>优点：将低速 I/O 设备从单总线上分离出来，实现了<strong>存储器总线和 I/O 总线分离</strong>；缺点：需要<strong>增加通道等硬件设备</strong></p><h4 id="三总线结构" tabindex="-1"><a class="header-anchor" href="#三总线结构" aria-hidden="true">#</a> 三总线结构</h4><p>采用 3 条各自独立的总线来构成信息通路：主存总线、I/O总线、直接内存访问（DMA）总线</p><figure><img src="'+p+'" alt="image-20211025192403413" tabindex="0" loading="lazy"><figcaption>image-20211025192403413</figcaption></figure><ul><li>主存总线：CPU 和内存之间传送地址、数据和控制信息</li><li>I/O 总线：CPU 和各类外设之间通信</li><li>DMA 总线：内存和高速外设之间直接传送数据，低速外设是打印机、显示器</li></ul><p>优点：<strong>提高了 I/O 设备的性能</strong>，使其更快地响应命令，提高系统吞吐量；缺点：<strong>系统工作效率较低</strong>，三套总线每个时刻只有一套总线在工作</p><h3 id="总线的性能指标" tabindex="-1"><a class="header-anchor" href="#总线的性能指标" aria-hidden="true">#</a> 总线的性能指标</h3><ol><li><p>总线的传输周期（总线周期）：指<strong>一次总线操作所需的时间</strong>，[由 4 个阶段组成](#总线传输的 4 个阶段)，通常<strong>由若干总线时钟周期构成</strong></p></li><li><p>总线时钟周期：即<strong>机器的时钟周期</strong>，总线也要受计算机的统一的时钟的控制</p></li><li><p>总线的工作频率：总线上各种操作的频率，为<strong>总线周期的倒数</strong>，实际上指 1 秒内传送几次数据</p></li><li><p>总线的时钟频率：即机器的时钟频率，它为<strong>时钟周期的倒数</strong></p></li><li><p>总线宽度：又称总线位宽，它是<strong>总线上同时能够传输的数据位数</strong>，通常指数据总线的根数，如 32 根称为 32 位总线</p></li><li><p>总线带宽：<strong>总线的数据传输率</strong>，即单位时间内总线上可传输数据的位数</p><p>通常用<strong>每秒传送信息的字节数</strong>来衡量，总线带宽 = 总线工作频率 × (总线宽度 / 8)</p><p>总线带宽是指总线本身所能达到的<strong>最高传输速率</strong>，它是衡量总线性能的<strong>重要指标</strong></p></li><li><p>总线复用：指<strong>一种信号线在不同的时间传输不同的信息</strong>，从而使用更少的线达到节省空间和成本</p></li><li><p>信号线数：地址总线、数据总线、控制总线 <strong>3 种总线线数的总和称为信号线数</strong></p></li></ol><p>总线的最主要性能指标为<strong>总线宽度、总线工作频率、总线带宽</strong>；三者关系：总线带宽 = 总线宽度 × 总线频率</p><h3 id="综合应用题" tabindex="-1"><a class="header-anchor" href="#综合应用题" aria-hidden="true">#</a> 综合应用题</h3><p>题目：某总线支持二级 Cache 块传输方式，若每块 6 个字，每个字长 4 字节，时钟频率为 <code>100MHz</code></p><ol><li>读操作时，第一个时钟周期接收地址，第二、三个为延时周期，另用 4 个周期传送一个块。求读操作的总线传输速率？</li><li>写操作时，第一个时钟周期接收地址，第二个为延时周期，另用4个周期传送一个块，写操作的总线传输速率是多少？</li><li>设在全部的传输中，70%用于读，30%用于写，该总线在本次传输中的平均传输速率是多少？</li></ol><p>解答：</p><ol><li>周期数：1 + 2 + 4 = 7；对应频率：<code>100MHz / 7</code>；总线宽度：<code>6 × 4B = 24B</code>；数据传输速率：<code>24 × (100MHz / 7) = 343MB/s</code></li><li>周期数：1 + 2 + 4 = 6；对应频率：<code>100MHz / 6</code>；总线宽度：<code>6 × 4B = 24B</code>；数据传输速率：<code>24 × (100MHz / 6) = 400MB/s</code></li><li>平均传输速率：<code>1 / (0.7 × 1 / 343 + 0.3 × 1 / 400) = 358MB/s</code></li></ol><h2 id="总线仲裁" tabindex="-1"><a class="header-anchor" href="#总线仲裁" aria-hidden="true">#</a> *总线仲裁</h2><p>采用<strong>总线仲裁部件</strong>解决<strong>多个主设备同时竞争总线控制权</strong>的问题，选择一个主设备优先获得总线控制权，只有获得了总线控制权的设备，才能开始传送数据</p><h3 id="集中仲裁方式" tabindex="-1"><a class="header-anchor" href="#集中仲裁方式" aria-hidden="true">#</a> 集中仲裁方式</h3><p>集中仲裁方式指<strong>总线控制逻辑集中于一个设备中</strong>，将所有的总线请求集中起来，<strong>用一个特定的裁决算法进行裁决</strong></p><h4 id="链式查询方式" tabindex="-1"><a class="header-anchor" href="#链式查询方式" aria-hidden="true">#</a> 链式查询方式</h4><p>总线上所有部件<strong>共用一根总线请求线、总线忙线</strong>，以及<strong>串联总线允许线</strong></p><p>当一个部件要使用总线（下面两种方式和这里差不多，就只写一次细节）：</p><ol><li>对总线请求线发出信号</li><li>总线控制部件检查总线忙线是否有效</li><li>如果有效，则延迟到失效再发出总线允许信号</li><li>总线允许信号从第一个部件一次向后传递，直到被要使用总线的部件截断</li><li>这个部件将总线忙线置为有效，开始使用总线，使用完后将总线忙置为无效</li></ol><figure><img src="'+c+'" alt="image-20211025215030153" tabindex="0" loading="lazy"><figcaption>image-20211025215030153</figcaption></figure><p>部件离总线控制器<strong>越近，其优先级越高</strong>；部件离总线控制器<strong>越远，其优先级越低</strong></p><p>优点：链式查询方式优先级固定，结构简单，扩充容易</p><p>缺点：对<strong>硬件电路的故障敏感</strong>，且<strong>优先级不能改变</strong>，可能会使优先级低的部件长期不能使用总线</p><h4 id="计算器定时查询方式" tabindex="-1"><a class="header-anchor" href="#计算器定时查询方式" aria-hidden="true">#</a> 计算器定时查询方式</h4><p>采用一个计数器控制总线使用权，相对链式查询方式<strong>多了一组设备地址线，少了一根总线响应线 <code>BG</code></strong></p><ol><li><p>把计算器的数放入设备地址线，每个请求的部件比较自己的地址与设备地址线的地址，相等就置总线忙有效</p></li><li><p>总线控制部件检查总线忙线，如果有效就终止；无效就把计数器加 1，回到第 1 步</p></li></ol><figure><img src="'+h+'" alt="image-20211026134408697" tabindex="0" loading="lazy"><figcaption>image-20211026134408697</figcaption></figure><p>优点：计数<strong>从 0 开始</strong>，则优先级<strong>和链式查询一样</strong>；计数<strong>从上一次的终点开始</strong>，此时设备使用总线的<strong>优先级相等</strong>；计数器的初值<strong>由程序设置</strong>，<strong>优先次序可以改变</strong>，且这种方式对<strong>电路的故障没有链式查询方式敏感</strong></p>',70),I=s("p",null,[n("缺点："),s("strong",null,"增加了控制线数"),n("，需要 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"⌈"),s("msub",null,[s("mrow",null,[s("mi",null,"log"),s("mo",null,"⁡")]),s("mn",null,"2")]),s("mi",null,"n"),s("mo",{stretchy:"false"},"⌉"),s("mo",null,"+"),s("mn",null,"2")]),s("annotation",{encoding:"application/x-tex"},"\\lceil\\log_2n\\rceil+2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"⌈"),s("span",{class:"mop"},[s("span",{class:"mop"},[n("lo"),s("span",{style:{"margin-right":"0.01389em"}},"g")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.207em"}},[s("span",{style:{top:"-2.4559em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2441em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"⌉"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"2")])])]),n(" 条控制线，控制也比相对链式查询要"),s("strong",null,"复杂")],-1),y=s("h4",{id:"独立请求方式",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#独立请求方式","aria-hidden":"true"},"#"),n(" 独立请求方式")],-1),C=s("p",null,[n("每个设备均有一对总线请求线 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"B"),s("msub",null,[s("mi",null,"R"),s("mi",null,"i")])]),s("annotation",{encoding:"application/x-tex"},"BR_i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0077em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),n(" 和总线允许线 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"B"),s("msub",null,[s("mi",null,"G"),s("mi",null,"i")])]),s("annotation",{encoding:"application/x-tex"},"BG_i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"G"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),n("，也共用一个总线忙线（没画出来）")],-1),P=t('<ol><li>当总线上的部件需要使用总线时，经各自的总线请求线发送总线请求信号，在<strong>总线控制器中排队</strong>（按一定的优先次序）</li><li>当总线控制器批准某个部件的请求时，给该部件发送总线响应信号，接到此信号后就获得了总线使用权，开始传送数据</li></ol><figure><img src="'+m+'" alt="image-20211026140238579" tabindex="0" loading="lazy"><figcaption>image-20211026140238579</figcaption></figure><p>优点：响应速度快，总线允许信号 <code>BG</code> <strong>直接从控制器发送到有关设备</strong>，而且<strong>对优先次序的控制相当灵活</strong> 缺点：<strong>控制线数量多</strong>，需要 <code>2n + 1</code> 条控制线，总线控制逻辑更复杂</p><h4 id="三种方式的联系与区别" tabindex="-1"><a class="header-anchor" href="#三种方式的联系与区别" aria-hidden="true">#</a> 三种方式的联系与区别</h4><figure><img src="'+u+'" alt="image-20211026140330442" tabindex="0" loading="lazy"><figcaption>image-20211026140330442</figcaption></figure><h3 id="分布仲裁方式" tabindex="-1"><a class="header-anchor" href="#分布仲裁方式" aria-hidden="true">#</a> *分布仲裁方式</h3><p>分布仲裁方式<strong>不需要中央仲裁器</strong>，每个潜在的主模块<strong>都有自己的仲裁号和仲裁器</strong></p><p>当它们有总线请求时，就会把它们各自唯一的仲裁号发送到共享的仲裁总线上，每个仲裁器将从仲裁总线上得到的仲裁号与自己的仲裁号进行比较</p><p>若仲裁总线上的仲裁号优先级高，则它的总线请求不予响应，并撤销它的仲裁号，<strong>最后获胜者的仲裁号保留在仲裁总线上</strong></p><h2 id="总线操作和定时" tabindex="-1"><a class="header-anchor" href="#总线操作和定时" aria-hidden="true">#</a> 总线操作和定时</h2><p>总线定时是指<strong>总线在双方交换数据的过程中需要<u>时间上配合</u>关系的控制</strong>，其实质是一种协议或规则</p><p><strong>半同步通信是同步定时方式和异步定时方式的结合</strong>，会采用统一的时钟周期，在传数时会等待（异步），因此总线周期不同</p><h3 id="总线传输的-4-个阶段" tabindex="-1"><a class="header-anchor" href="#总线传输的-4-个阶段" aria-hidden="true">#</a> 总线传输的 4 个阶段</h3><p>一个总线周期通常可分为以下 4 个阶段：</p><ol><li>申请分配阶段：由主模块<strong>提出申请</strong>，然后<strong>仲裁</strong>出下总线使用者，可将此阶段分为传输请求和总线仲裁两个阶段</li><li>寻址阶段：主模块通过总线<strong>发出本次要访问的从模块的地址及有关命令</strong>，启动参与本次传输的从模块</li><li>传输阶段：主模块和从模块<strong>进行数据交换</strong>，可单向或双向进行数据传送</li><li>结束阶段：主模块的有关信息均从系统总线上撤除，<strong>让出总线使用权</strong></li></ol><h3 id="同步定时方式" tabindex="-1"><a class="header-anchor" href="#同步定时方式" aria-hidden="true">#</a> 同步定时方式</h3><p>指使用<strong>统一的时钟信号</strong>和<strong>统一的总线周期</strong>，在一个总线周期中，发送方和接收方可以进行一次数据传送</p><p>每个部件或设备发送或接收信息都在固定的总线传送周期中，<strong>一个总线的传送周期结束，下一个总线的传送周期开始</strong></p><p>优点：<strong>传送速度快</strong>，具有较高的传输速率；总线控制逻辑简单</p><p>缺点：主从设备属于强制性同步；不能及时进行数据通信的有效性检验，<strong>可靠性较差</strong>，如从模块突然不能按时完成传输</p><p>同步通信适用于<strong>总线长度较短</strong>及总线<strong>所接部件的存取时间比较接近</strong>的系统</p><p>额外：串行同步通信使用多个字符组成信息组，在传输数据的同时还需要传输时钟信号，根据时钟信号来同步</p><h3 id="异步定时方式" tabindex="-1"><a class="header-anchor" href="#异步定时方式" aria-hidden="true">#</a> 异步定时方式</h3><p>没有统一的时钟，也没有固定的时间间隔，完全依靠传送双方相互制约的<strong>握手信号来实现定时控制</strong></p><p><strong>主设备提出交换信息的请求信号</strong>，经接口传送到从设备；<strong>从设备</strong>接到主设备的请求后，通过接口向主设备<strong>发出回答信号</strong></p><p>优点：<strong>总线周期长度可变</strong>，能保证两个<strong>工作速度相差很大的部件或设备之间可靠地进行信息交换</strong>，自动适应时间的配合</p><p>缺点：比同步控制方式稍复杂一些，<strong>速度比同步定时方式慢</strong></p><p>根据请求和回答信号的撤销是否互锁，分为以下 3 种类型：</p><ol><li>不互锁方式：双方会自动撤销信号 <ul><li>主设备发出请求信号后，经过一段时间<strong>自动撤销请求信号</strong></li><li>从设备在接到请求信号后，发出回答信号，经过一段时间后<strong>自动撤销回答信号</strong></li></ul></li><li>半互锁方式：只有一方自动撤销信号 <ul><li>主设备发出请求信号后，必须<strong>在从设备回答后才撤销请求信号</strong></li><li>从设备在接到请求信号后，发出回答信号，经过一段时间后<strong>自动撤销回答信号</strong></li></ul></li><li>全互锁方式：必须等响应后才能撤销信号 <ul><li>主设备发出请求信号后，必须<strong>在从设备回答后才撤销请求信号</strong></li><li>从设备发出回答信号后，必须在获知<strong>主设备请求信号已撤销后，再撤销其回答信号</strong></li></ul></li></ol><figure><img src="'+f+'" alt="image-20211026165026428" tabindex="0" loading="lazy"><figcaption>image-20211026165026428</figcaption></figure>',30),v=s("strong",null,"起始位和停止位",-1),A={href:"https://cloud.tencent.com/developer/news/564920",target:"_blank",rel:"noopener noreferrer"},M=t('<h2 id="总线标准" tabindex="-1"><a class="header-anchor" href="#总线标准" aria-hidden="true">#</a> 总线标准</h2><h3 id="总线标准的基本概念" tabindex="-1"><a class="header-anchor" href="#总线标准的基本概念" aria-hidden="true">#</a> 总线标准的基本概念</h3><p>总线标准是国际上公布或推荐的互连各个模块的标准，它是把各种不同的模块组成计算机系统时必须遵守的规范</p><p>按总线标准设计的接口可视为通用接口，在接口的两端，任何一方<strong>只需根据总线标准的要求完成自身方面的功能要求</strong></p><p>即插即用 Plug-and-Play：<strong>把设备插入总线上就可以用</strong>，配置是自动的，需要总线提供一定的硬件支持</p><p>热插拔 hot-plugging 或 Hot Swap：即<strong>带电插拔</strong>，需要总线提供一定的硬件支持</p><p>思考：使用总线系统有一部分原因是为了降低成本，高速的总线成本高，而低速的硬件配高速总线没什么用，所以直接给他配了成本低的低速总线；还有一部分原因是为了把计算机分成多个模块等</p><h3 id="常见的总线标准" tabindex="-1"><a class="header-anchor" href="#常见的总线标准" aria-hidden="true">#</a> 常见的总线标准</h3><figure><img src="'+x+'" alt="image-20211026200156541" tabindex="0" loading="lazy"><figcaption>image-20211026200156541</figcaption></figure><h4 id="系统总线标准" tabindex="-1"><a class="header-anchor" href="#系统总线标准" aria-hidden="true">#</a> 系统总线标准</h4><p>系统总线指连接计算机系统各个部件的总线</p><ol><li><p><strong>ISA，Industry Standard Architecture，工业标准体系结构</strong>：是最早出现的微型计算机的系统总线，也叫 PC/AT 总线</p><p><strong>数据传输需要 CPU 或 DMA 接口来管理，不支持总线仲裁</strong></p></li><li><p><strong><code>EISA</code>，Extended Industry Standard Architecture，扩展的 ISA</strong>：是为配合 32 位 CPU 而设计的扩展总线</p><p><strong><code>EISA</code> 对 ISA 完全兼容</strong>，从 CPU 分离出了总线控制权，<strong>支持多个总线主控制器和突发传输</strong></p></li></ol><h4 id="局部总线标准" tabindex="-1"><a class="header-anchor" href="#局部总线标准" aria-hidden="true">#</a> 局部总线标准</h4><p>为了解决系统总线太慢的问题，引用局部总线把高速设备单独连接到 CPU，有<strong>节省系统总带宽</strong>的作用</p><ol><li><p><strong><code>PCI</code>，Peripheral Component Interconnect，外部设备互连</strong>：32 或 64 位数据线，比 <code>EISA</code> 更高的工作频率</p><p>不依附于某个具体的处理器，<strong>支持突发传送</strong>；<strong>支持即插即用</strong>；可扩充性好，<strong>可采用多层结构提高驱动能力</strong></p><p><code>PCI</code> 总线是<strong>独立于 CPU 的局部总线</strong>，可将高速的外围设直接挂在 CPU 总线上如网卡、声卡等；半同步总线</p></li><li><p><code>AGP，Accclerated Graphics Port</code>，加速图形接口：解决 <code>PCI</code> 对 3D 显卡力不从心的问题，是<strong>显卡专用</strong>的局部总线</p></li><li><p><strong><code>PCI-Express(PCI-E)</code>：最新标准，它取代了 <code>PCI</code> 和 <code>AGP</code> 统一总线标准</strong>；<strong>点对点串行连接方式</strong>；<strong>支持热插拔</strong></p></li><li><p><code>VESA</code>，Video Electronics Standards Association，视频电子标准协会：<strong>针对视频的 32 位局部总线</strong></p><p>由 CPU 总线演化而来，是针对多媒体 PC 要求<strong>高速传送活动图像的大量数据</strong>应运而生的</p></li></ol><h4 id="设备总线标准" tabindex="-1"><a class="header-anchor" href="#设备总线标准" aria-hidden="true">#</a> 设备总线标准</h4><p>设备总线主要用于把外设接入计算机系统</p><ol><li><p><strong><code>USB</code>，Universal Serial Bus，通用串行总线</strong>：<code>USB</code> 属于设备总线，是<strong>设备和设备控制器之间的接口</strong></p><p><strong>可以热插拔、即插即用；具有很强的连接能力和很好的可扩充性；标准统一；高速传输；可为低压外设供电</strong></p></li><li><p><code>RS-232C</code>，Recommended Standard，RS：是由美国电子工业协会（<code>EIA</code>）推荐的一种<strong>串行通信总线</strong>，是应用于<strong>串行二进制交换的数据终端设备</strong>（<code>DTE</code>）和<strong>数据通信设备</strong><code>(DCE</code>）之间的标准接口</p></li><li><p><code>IDE</code>，Integrated Drive Electronics，集成设备电路：也称 <code>ATA</code>，<strong>硬盘和光驱</strong>通过 <code>IDE</code> 接口与主板连接</p></li><li><p><code>SATA</code>，Serial Advanced Technology Attachment，串行高级技术附件：是一种基于行业标准的<strong>串行硬盘接口</strong></p></li><li><p>SCSI，Small Computer System Interface，小型计算机系统接口：是一种用于计算机和智能设备之间（硬盘、软驱、光驱、打印机等）系统级接口的独立处理器标准，SCSI 是一种智能的通用接口标准</p></li><li><p><code>PCMCIA</code>，Personal Computer Memory Card International Association：是广泛应用于笔记本电脑的一种接口标准，是一个用于扩展功能的小型插槽。<code>PCMCIA</code> 具有即插即用功能</p></li></ol><h4 id="视频线的标准" tabindex="-1"><a class="header-anchor" href="#视频线的标准" aria-hidden="true">#</a> *视频线的标准</h4><ol><li>VGA，Video Graphics Array，也称为 D-sub 端口，传输模拟信号 CRT 显示器</li><li><code>DVI</code>，Digital Visual Interface，传输数字信号</li><li><code>HDMI，High Definition MultimediaInterface</code> 理论最大传输速度可达 <code>Gb/s</code> 影像数据 + 8 声道的音讯信号源于 <code>DVI</code> 技术</li></ol>',20);function S(z,B){const a=l("ExternalLinkIcon");return o(),e("div",null,[b,I,y,C,P,s("p",null,[n("额外：串行异步通信，收发双方取得同步是通过在字符格式中设置"),v,n("的方法来实现的，"),s("a",A,[n("完整内容"),i(a)])]),M])}const E=r(_,[["render",S],["__file","第六章 总线.html.vue"]]);export{E as default};
