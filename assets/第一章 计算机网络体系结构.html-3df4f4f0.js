import{_ as r,X as n,Y as o,a2 as t}from"./framework-0cdb5b8e.js";const s="/408doc/408noteImg/images/image-20211124201750963.png",i="/408doc/408noteImg/images/image-20211124202023469.png",g="/408doc/408noteImg/images/image-20211124202340971.png",a="/408doc/408noteImg/images/image-20211124202523869.png",p="/408doc/408noteImg/images/image-20211126202359934.png",e="/408doc/408noteImg/images/image-20211126202552956.png",l="/408doc/408noteImg/images/image-20211126202645175.png",d="/408doc/408noteImg/images/image-20211126203023985.png",h="/408doc/408noteImg/images/image-20211126203147282.png",c="/408doc/408noteImg/images/image-20211127150451197.png",u="/408doc/408noteImg/images/image-20211126203535560.png",m="/408doc/408noteImg/images/image-20211126203649879.png",P="/408doc/408noteImg/images/image-20211126203750388.png",f="/408doc/408noteImg/images/image-20211126203831425.png",I={},b=t('<h2 id="计算机网络概述" tabindex="-1"><a class="header-anchor" href="#计算机网络概述" aria-hidden="true">#</a> 计算机网络概述</h2><h3 id="计算机网络的概念" tabindex="-1"><a class="header-anchor" href="#计算机网络的概念" aria-hidden="true">#</a> 计算机网络的概念</h3><p>计算机网络是一个<strong>将计算机系统，通过通信设备与线路连接起来</strong>，由<strong>功能完善的软件</strong>实现<strong>资源共享</strong>和<strong>信息传递</strong>的系统</p><p>简而言之，计算机网络就是一些互联的、自治的<strong>计算机系统的集合</strong></p><p>在计算机网络发展的不同阶段，人们对计算机网络给出了不同的定义：</p><h4 id="广义观点" tabindex="-1"><a class="header-anchor" href="#广义观点" aria-hidden="true">#</a> 广义观点</h4><p>这种观点认为，计算机网络是<strong>实现远程信息处理的系统或能进一步达到资源共享的系统</strong></p><p>广义的观点定义了一个计算机通信网络，它在物理结构上具有计算机网络的雏形</p><p>但<strong>资源共享能力弱</strong>，是计算机网络发展的<strong>低级阶段</strong></p><h4 id="资源共享观点" tabindex="-1"><a class="header-anchor" href="#资源共享观点" aria-hidden="true">#</a> 资源共享观点</h4><p>这种观点认为，计算机网络是以<strong>能够相互共享资源的方式互联起来的自治计算机系统的集合</strong></p><p>该定义包含三层含义：</p><ol><li>目的：资源共享</li><li>组成单元：分布在不同地理位置的多台独立的自治计算机</li><li>网络中的计算机必须遵循的统一规则：网络协议</li></ol><p>该定义符合<strong>目前计算机网络的基本特征</strong></p><h4 id="用户透明性观点" tabindex="-1"><a class="header-anchor" href="#用户透明性观点" aria-hidden="true">#</a> 用户透明性观点</h4><p>这种观点认为，存在一个能为用户自动管理资源的网络操作系统，它能够调用用户所需要的资源，而整个网络就像一个大的计算机系统一样对用户是透明的</p><p>用户使用网络就像使用一台单一的超级计算机，无须了解网络的存在、资源的位置信息</p><p>用户透明性观点的定义描述了一个分布式系统，它是网络<strong>未来发展追求的目标</strong></p><h3 id="计算机网络的组成" tabindex="-1"><a class="header-anchor" href="#计算机网络的组成" aria-hidden="true">#</a> 计算机网络的组成</h3><ol><li><p>从组成部分上看：一个完整的计算机网络<strong>主要由硬件、软件、协议三大部分组成</strong></p><ul><li>硬件：主要由<strong>主机、通信链路、交换设备、通信处理机</strong>（如网卡）等组成</li><li>软件：主要包括<strong>实现资源共享</strong>和<strong>方便用户使用的工具软件</strong>，软件部分<strong>多属于应用层</strong></li><li>协议：是计算机网络的<strong>核心</strong>，协议<strong>规定了网络传输数据时所遵循的规范</strong></li></ul></li><li><p>从工作方式上看：计算机网络（Internet）可分为<strong>边缘部分和核心部分</strong></p><ul><li>边缘部分：由所有连接到因特网上、供用户直接使用的<strong>主机组成</strong>，用来进行<strong>通信和资源共享</strong></li><li>核心部分：由大量的<strong>网络和连接这些网络的路由器</strong>组成，它为边缘部分<strong>提供连通性和交换服务</strong></li></ul><img src="'+s+'" alt="image-20211124201750963"></li><li><p>从功能组成上看：计算机网络由<strong>通信子网和资源子网</strong>组成（计算机网络基本组成）</p><ul><li><p>通信子网：由各种<strong>传输介质、通信设备和相应的网络协议</strong>组成（即物理层、数据链路层、网络层的功能）</p><p>使网络具有数据传输、交换、控制和存储的能力，<strong>实现联网计算机之间的数据通信</strong></p></li><li><p>资源子网：是<strong>实现资源共享功能的设备及其软件</strong>的集合（即会话层、表示层、应用层的功能）</p><p>向网络用户<strong>提供共享其他计算机上的硬件资源、软件资源和数据资源的服务</strong></p></li></ul></li></ol><h3 id="计算机网络的功能" tabindex="-1"><a class="header-anchor" href="#计算机网络的功能" aria-hidden="true">#</a> 计算机网络的功能</h3><ol><li><p>数据通信：计算机网络<strong>最基本和最重要的功能</strong></p><p>实现联网<strong>计算机之间各种信息的传输</strong>，并将分散在不同地理位置的计算机联系起来，进行统一的调配、控制和管理</p></li><li><p>资源共享：资源共享可以是<strong>软件共享、数据共享，也可以是硬件共享</strong></p><p>它使计算机网络中的<strong>资源互通、分工协作</strong>，从而极大地提高硬件资源、软件资源和数据资源的利用率</p></li><li><p>分布式处理：将其处理的<strong>某个复杂任务分配给网络中的其他计算机系统</strong>，以提高整个系统的利用率</p></li><li><p>提高可靠性：计算机网络中的各台计算机可以<strong>通过网络互为替代机</strong></p></li><li><p>负载均衡：<strong>将工作任务均衡地分配</strong>给计算机网络中的各台计算机</p></li></ol><p>除以上几大主要功能外，计算机网络还可以实现电子化办公与服务、远程教育、娱乐等功能</p><h3 id="计算机网络的分类" tabindex="-1"><a class="header-anchor" href="#计算机网络的分类" aria-hidden="true">#</a> 计算机网络的分类</h3><h4 id="按分布范围分类" tabindex="-1"><a class="header-anchor" href="#按分布范围分类" aria-hidden="true">#</a> 按分布范围分类</h4><ol><li><p>广域网 WAN：广域网的任务是<strong>提供长距离通信</strong></p><p>覆盖范围通常是直径为几十千米到几千千米的区域，因而有时也称远程网（<strong>国与国之间</strong>）</p><p>广域网是<strong>因特网的核心部分</strong>，连接广域网的各结点交换机的链路一般都是<strong>高速链路</strong>，具有较大的通信容量</p></li><li><p>城域网 MAN：覆盖范围可以跨越<strong>几个街区甚至整个城市</strong>，覆盖区域的直径范围是 <code>5～50km</code></p><p>城域网大多<strong>采用以太网技术</strong>，因此有时也常并入局域网的范围讨论</p></li><li><p>局域网 LAN：一般用微机或工作站通过高速线路相连，<strong>覆盖范围较小，直径为几十米到几千米的区域</strong></p><p>局域网在计算机配置的数量上没有太多的限制，少的可以只有两台，多的可达几百台</p></li><li><p>个人区域网 PAN：在个人工作的地方将消费电子设备（如手机）用无线技术连接起来的网络，也常称为无线个人区域网 <code>WPAN</code>，覆盖区域的直径约为 <code>10m</code></p></li></ol><h4 id="按传输技术分类" tabindex="-1"><a class="header-anchor" href="#按传输技术分类" aria-hidden="true">#</a> 按传输技术分类</h4><ol><li><p>广播式网络：所有联网计算机都<strong>共享一个公共通信信道</strong></p><p>当一台计算机利用共享通信信道发送报文分组时，所有其他的计算机都会收听到这个分组</p><p>接收到该分组的计算机将通过检查目的地址来决定是否接收该分组</p><p><strong>局域网基本上都采用广播式通信技术</strong>，广域网中的无线、卫星通信网络也采用广播式通信技术</p></li><li><p>点对点网络：<strong>每条物理线路连接一对计算机</strong>，<strong>广域网基本都属于点对点网络</strong></p><p>若通信的两台主机之间<strong>没有直接连接的线路</strong>，则它们的分组传输<strong>就要通过中间结点进行接收、存储和转发</strong>，直至目的结点</p></li></ol><p>是否采用分组存储转发与路由选择机制是点对点式网络与广播式网络的重要区别</p><p>传统上，<strong>局域网使用广播技术，而广域网使用交换技术</strong>，区别局域网和广域网的关键在于<strong>所采用的协议</strong></p><h4 id="按拓扑结构分类" tabindex="-1"><a class="header-anchor" href="#按拓扑结构分类" aria-hidden="true">#</a> 按拓扑结构分类</h4><p>网络拓扑结构指由<strong>网中结点（路由器、主机等）与通信线路之间的几何关系</strong>表示的网络结构，主要指<strong>通信子网的拓扑结构</strong></p><p>网络的拓扑结构主要有：</p><img src="'+i+'" alt="image-20211124202023469" style="zoom:150%;"><ol><li><p>总线形网络：用<strong>单根传输线把计算机连接起来</strong></p><p>优点：建网容易、增/减结点方便、节省线路；缺点：重负载时通信效率不高、总线任意一处对故障敏感</p></li><li><p>星形网络：每个终端或计算机都<strong>以单独的线路与中央设备相连</strong></p><p>中央设备早期是计算机，现在一般是交换机或路由器</p><p>优点：便于集中控制和管理；缺点：成本高、中心设备对故障敏感</p></li><li><p>环形网络：所有计算机接口设备<strong>连接成一个环</strong></p><p>环形网络最典型的例子是令牌环局域网</p><p>环可以是单环，也可以是双环，<strong>环中信号是单向传输的</strong></p></li><li><p>网状网络：每个结点<strong>至少有两条路径与其他结点相连</strong>，其有规则型和非规则型两种</p><p>优点：可靠性高；缺点是控制复杂、线路成本高</p></li></ol><p>以上 4 种基本的网络拓扑结构<strong>可以互联为更复杂的网络</strong>；星形、总线形和环形网络多用于<strong>局域网</strong>，网状网络多用于<strong>广域网</strong></p><h4 id="按使用者分类" tabindex="-1"><a class="header-anchor" href="#按使用者分类" aria-hidden="true">#</a> 按使用者分类</h4><ol><li><p>公用网 Public Network：指电信公司出资建造的大型网络</p><p>指所有愿意按电信公司的规定<strong>交纳费用的人都可以使用这种网络</strong>，因此也称公众网</p></li><li><p>专用网 Private Network：指某个部门为满足本单位特殊业务的需要而建造的网络</p><p>这种网络<strong>不向本单位以外的人提供服务</strong>，例如铁路、电力、军队等部门的专用网</p></li></ol><h4 id="按交换技术分类" tabindex="-1"><a class="header-anchor" href="#按交换技术分类" aria-hidden="true">#</a> 按交换技术分类</h4><p>交换技术是指各台主机通信设备各种组合之间<strong>为交换信息所采用的数据格式和交换装置的方式</strong></p><h5 id="电路交换网络" tabindex="-1"><a class="header-anchor" href="#电路交换网络" aria-hidden="true">#</a> 电路交换网络</h5><p>在源结点和目的结点之间<strong>建立一条专用的通路用于传送数据</strong>，包括<strong>建立连接、传输数据和断开连接</strong>阶段（如传统电话网络）</p><p>该类网络的主要特点是整个报文的比特流连续地从<strong>源点直达终点</strong>，好像是在一条管道中传送</p><p>优点：数据直接传送、时延小；缺点：线路利用率低、不能充分利用线路容量、不便于进行差错控制</p><h5 id="报文交换网络" tabindex="-1"><a class="header-anchor" href="#报文交换网络" aria-hidden="true">#</a> 报文交换网络</h5><p>用户数据加上源地址、目的地址、校验码等<strong>辅助信息</strong>，然后封装成报文</p><p>整个报文传送到相邻结点，全部存储后，查表<strong>转发</strong>给下一个结点，重复这一过程直到到达目的结点，也称<strong>存储-转发网络</strong></p><p>优点：较为充分地利用线路容量；不同数据传输速率的转换；格式转换；实现一对多、多对一的访问；实现差错控制</p><p>缺点：<strong>增大了资源开销，增加了缓冲时延</strong>，需额外的控制机制来<strong>保证多个报文的顺序不乱序</strong>，缓冲区难以管理（大小不定）</p><h5 id="分组交换网络" tabindex="-1"><a class="header-anchor" href="#分组交换网络" aria-hidden="true">#</a> 分组交换网络</h5><p>也称<strong>包交换网络</strong>，将数据分成较短的<strong>固定长度的数据块</strong>，在每个数据块中加上辅助信息组成分组，以<strong>存储-转发方式传输</strong></p><p>其主要特点是单个分组（报文的一部分）传送到相邻结点，<strong>存储后查找转发表</strong>，转发到下一个结点</p><p>现在基本使用分组交换网络，除具有报文交换网络的优点外，还有：</p><ol><li>缓冲易于管理</li><li>包的平均时延更小，网络占用的平均缓冲区更少</li><li>更易于标准化</li><li>更适合应用</li></ol><hr><p>注意：电路交换网络<strong>需要连接</strong>，报文和分组交换网络<strong>需要转发</strong></p><p>思考：在存储-转发方式，<strong>包越大转发数据的发送延迟就越大</strong>，但总的辅助信息会减少，所以<strong>发送延迟会变少</strong></p><h4 id="按传输介质分类" tabindex="-1"><a class="header-anchor" href="#按传输介质分类" aria-hidden="true">#</a> 按传输介质分类</h4><p>传输介质可分为有线和无线两大类，因此网络可以分为<strong>有线网络和无线网络</strong></p><ul><li>有线网络：分为双绞线网络、同轴电缆网络等</li><li>无线网络：分为蓝牙、微波、无线电等类型</li></ul><h3 id="计网的标准化工作及相关知识" tabindex="-1"><a class="header-anchor" href="#计网的标准化工作及相关知识" aria-hidden="true">#</a> *计网的标准化工作及相关知识</h3><p>计算机网络的标准化对计算机网络的发展和推广起到了极为重要的作用</p><p>因特网的所有标准都以 RFC 的形式在因特网上发布，经过以下四个阶段就是因特网标准：</p><ol><li>因特网草案 Internet Draft：这个阶段还不是 RFC 文档</li><li>建议标准 Proposed Standard：把草案发送给机构被通过后，就开始成为 RFC 文档</li><li>草案标准 Draft Standard：发到网上被很多人进行评论修改后</li><li>因特网标准 Internet Standard：<code>IETF、IAB</code> 审核通过后</li></ol><p>此外，还有试验的 RFC 和提供信息的 RFC，之间的关系：</p><figure><img src="'+g+'" alt="image-20211124202340971" tabindex="0" loading="lazy"><figcaption>image-20211124202340971</figcaption></figure><p>在国际上，负责制定、实施相关网络标准的标准化组织众多，主要有如下几个：</p><ul><li>国际标准化组织 ISO：其制定的主要网络标准或规范有 OSI 参考模型、<code>HDLC</code> 等</li><li>国际电信联盟 <code>ITU</code>：其下属机构 <code>ITU-T</code> 制定了大量有关远程通信的标准</li><li>国际电气电子工程师协会 IEEE：世界上最大的专业技术团体，最著名的研究成果是 802 标准</li></ul><h3 id="计算机网络的性能指标" tabindex="-1"><a class="header-anchor" href="#计算机网络的性能指标" aria-hidden="true">#</a> 计算机网络的性能指标</h3><ol><li><p>带宽 Bandwidth：<strong>网络的通信线路所能传送数据的能力</strong>，看作<strong>最高数据传输速率</strong>，单位是比特/秒</p></li><li><p>时延 Delay：指<strong>数据从网络的一端传送到另一端所需要的总时间</strong>，它由以下部分构成：</p><ul><li><p>发送时延：结点<strong>将分组的所有比特推向链路所需的时间</strong>，即发送全部数据所需的时间，因此也称<strong>传输时延</strong></p><p>计算公式：<strong>发送时延 = 分组长度 / 信道宽度</strong></p></li><li><p>传播时延：电磁波在信道中传播一定的距离需要花费的时间，即<strong>一个比特从链路的一端传播到另一端所需的时间</strong></p><p>计算公式：<strong>传播时延 = 信道长度 / 电磁波在信道上的传播速率</strong></p></li><li><p>处理时延：数据在交换结点为<strong>存储转发</strong>而进行的一些必要的处理<strong>所花费的时间</strong></p><p>例如，分析分组的首部、从分组中提取数据部分、进行差错检验或查找适当的路由等</p></li><li><p>排队时延：分组在路由器后中的<strong>输入/输出队列中排队等待处理所需要的时间</strong>，排队接受数据或排队发送数据</p></li></ul><p>数据在网络中经历的总时延为：<strong>总时延 = 发送时延 + 传播时延 + 处理时延 + 排队时延</strong></p><p>注意：若题目没有说明，<strong>排队时延和处理时延一般可忽略不计</strong></p><p>注意：高速链路提高了数据<strong>发送速率</strong>，减少了数据的<strong>发送时延</strong>，但对传播延迟没有影响（仍然使用电磁波传播）</p></li><li><p>时延带宽积：发送端发送的<strong>第一个比特到达终点时</strong>，发送端<strong>已经发出了多少个比特</strong></p><p>又称以比特为单位的链路长度，<strong>时延带宽积 = 传播时延 × 信道带宽</strong></p><p>一个代表链路的圆柱形管道，其长度表示链路的传播时延，横截面积表示链路带宽，时延带宽积就是它的体积</p><img src="'+a+'" alt="image-20211124202523869" style="zoom:150%;"></li><li><p>往返时延 <code>RTT</code>：<strong>从发送端发送数据开始，到发送端收到来自接收端的确认</strong>，总共经历的时延</p><p>在互联网中，往返时延还包括各中间结点的处理时延、排队时延及转发数据时的发送时延</p></li><li><p>吞吐量 Throughput：<strong>单位时间内通过某个网络的数据量</strong>，受网络带宽或网络额定速率的限制</p></li><li><p>速率 Speed：连接到计算机网络上的<strong>主机在数字信道上发送数据的速率</strong>，也称<strong>数据传输速率</strong>、数据率或比特率</p><p>单位是 <code>b/s、kb/s、Mb/s、Gb/s</code> 表示，在计算机网络中，<strong>最高数据传输速率称为带宽</strong></p></li><li><p>信道利用率：指出某一信道<strong>有百分之多少的时间是有数据通过的</strong>，<strong>信道利用率 = 有数据通过时间 / (有 + 无) 数据通过时间</strong></p><p>注意：通道利用率越大，时延就会越大</p></li></ol><p>额外：一段时间内，链路有多少比特取决于带宽（或传输速率），而比特跑了多远取决与传播速率</p><h2 id="计算机网络体系结构与参考模型" tabindex="-1"><a class="header-anchor" href="#计算机网络体系结构与参考模型" aria-hidden="true">#</a> 计算机网络体系结构与参考模型</h2><h3 id="计算机网络分层结构" tabindex="-1"><a class="header-anchor" href="#计算机网络分层结构" aria-hidden="true">#</a> 计算机网络分层结构</h3><p>为了降低协议设计和调试过程的复杂性，对网络进行研究、实现和维护，促进标准化工作，对计算机网络体系进行分层</p><p>计算机网络体系结构 Architecture 是<strong>计算机网络及其功能的定义</strong>，是计算机网络中<strong>各层及其协议和层间接口的集合</strong></p><p>计算机网络体系结构是<strong>抽象的</strong>，具体实现的是计算机的软件和硬件，它的分层的基本原则如下：</p><ol><li>每层都实现一种<strong>相对独立的功能</strong>，降低大系统的复杂度</li><li>各层之间界面自然清晰，易于理解，<strong>相互交流尽可能少</strong></li><li><strong>各层功能的定义独立于具体的实现方法</strong>，可以采用最合适的技术来实现</li><li>保持<strong>下层对上层的独立性</strong>，上层单向使用下层提供的服务</li><li>整个分层结构应<strong>能促进标准化工作</strong></li></ol><p>分层的体系结构易于更新\\替换单个模块，易于调试，易于交流，易于抽象，易于标准化</p><p>层次越多，有些功能在不同层中难免重复出现；层次越少，就会使每层的协议太复杂</p><p>因此，在分层时应考虑层次的清晰程度与运行效率间的折中、层次数量的折中</p><p>在计算机网络的分层结构中，<strong>第 n 层中的活动元素通常称为第 n 层实体</strong></p><ul><li>实体：<strong>任何可收发信息的硬件或软件进程</strong>，通常是一个特定的软件模块</li><li>对等层：<strong>不同机器上的同一层</strong></li><li>对等实体：<strong>同一层的实体</strong></li><li>第 n 层实体实现的服务为第 n + 1 层所利用，第 n 层称为服务提供者，第 n + 1 层则服务于用户</li></ul><p><strong>每一层有自己传送的数据单位</strong>，其名称、大小、含义也各有不同</p><ul><li>服务数据单元 SDU：为<strong>完成用户所要求的功能而应传送的数据</strong>，第 n 层 SDU 为 n-SDU</li><li>协议控制信息 PCI：<strong>控制协议操作的信息</strong></li><li>协议数据单元 PDU：对等层次之间<strong>传送的数据单位</strong>称为该层的 PDU</li></ul><p>各个层次中，每个报文都分为数据部分 SDU 和控制信息部分 PCI，<strong>共同组成 PDU</strong>；<strong>高层的 PDU 是 底层的 SDU</strong></p><figure><img src="'+p+'" alt="image-20211126202359934" tabindex="0" loading="lazy"><figcaption>image-20211126202359934</figcaption></figure><p>具体地，层次结构的含义包括以下几方面：</p><ol><li><p>第 n 层的实体要使用第 n - 1 层的服务，并向第 n + 1 层提供本层的服务，提供本层及其下面服务的总和</p></li><li><p>最低层只提供服务，是整个层次结构的基础</p><p>中间各层既是下一层的服务使用者，又是上一层的服务提供者</p><p>最高层面向用户提供服务</p></li><li><p><strong>上一层只能通过相邻层间的接口使用下一层的服务</strong>；下一层所提供服务的<strong>实现细节对上一层透明</strong></p></li><li><p>两台主机通信时，对等层在逻辑上有一条直接信道，表现为不经过下层就把信息传送到对方</p></li></ol><h3 id="计网协议、接口、服务的概念" tabindex="-1"><a class="header-anchor" href="#计网协议、接口、服务的概念" aria-hidden="true">#</a> 计网协议、接口、服务的概念</h3><h4 id="协议" tabindex="-1"><a class="header-anchor" href="#协议" aria-hidden="true">#</a> 协议</h4><p>协议，就是<strong>规则的集合</strong>，必须遵循一些规则才能在网络中交换数据，规则必须规定所交换的数据的格式及有关的同步问题</p><p>网络协议 Network Protocol：<strong>为进行网络中的数据交换而建立的规则</strong>，用于控制两个对等实体进行通信，是<strong>水平的</strong></p><p>协议由语法、语义和同步三部分组成：</p><ul><li>语法：规定了<strong>传输数据的格式</strong></li><li>语义：规定了<strong>所要完成的功能</strong></li><li>同步：规定了<strong>执行各种操作的条件、时序关系</strong>等</li></ul><p>一个完整的协议通常应具有线路管理（建立、释放连接）、差错控制、数据转换等功能</p><h4 id="接口" tabindex="-1"><a class="header-anchor" href="#接口" aria-hidden="true">#</a> 接口</h4><p>接口是同一结点内<strong>相邻两层间交换信息的连接点</strong>，是一个系统内部的规定，只能为<strong>紧邻的层次之间</strong>定义接口</p><p>在典型的接口上，同一结点相邻两层的实体通过服务访问点 SAP 进行交互，<strong>接口是服务的访问入口</strong></p><p>服务是通过 SAP 提供给上层使用的，第 n 层的 SAP 就是第 n + 1 层可以访问第 n 层服务的地方</p><p>每个 SAP 都有一个能够标识它的地址。SAP 是一个<strong>抽象的概念</strong>，它实际上是一个逻辑接口，与硬件接口不一样</p><h4 id="服务" tabindex="-1"><a class="header-anchor" href="#服务" aria-hidden="true">#</a> 服务</h4><p>服务是指<strong>下层为紧邻的上层提供的功能调用</strong>，它是<strong>垂直的</strong></p><p>对等实体在协议的控制下，使用下一层所提供的服务，使得本层能为上一层提供服务</p><p>上层使用下层所提供的服务时必须与下层交换一些命令，这些命令在 OSI 参考模型中称为服务原语：</p><ol><li>请求 Request：用户 → 提供者，<strong>请求完成某项工作</strong></li><li>指示 Indication：提供者 → 用户，<strong>指示用户做某件事情</strong></li><li>响应 Response：用户 → 提供者，<strong>作为对指示的响应</strong></li><li>证实 Confirmation：提供者 → 用户，<strong>作为对请求的证实</strong></li></ol><p>这 4 类原语用于不同的功能，如建立连接、传输数据和断开连接等</p><p>有应答服务包括全部原语，而无应答服务则只有请求和指示两类原语，下面是它们的关系：</p><figure><img src="'+e+'" alt="image-20211126202552956" tabindex="0" loading="lazy"><figcaption>image-20211126202552956</figcaption></figure><p>协议和服务在概念上是不一样的：</p><ul><li><strong>只有本层协议的实现才能保证向上一层提供服务</strong></li><li>本层的服务用户<strong>只能看见服务而无法看见下层的协议</strong></li><li><strong>协议是水平的；服务是垂直的</strong></li><li>只有那些<strong>能够被高一层实体“看得见”的功能才称为服务</strong></li></ul><p>协议、接口、服务三者之间的关系下：</p><figure><img src="'+l+'" alt="image-20211126202645175" tabindex="0" loading="lazy"><figcaption>image-20211126202645175</figcaption></figure><p>计算机网络提供的服务按以下分类：</p><h5 id="面向连接服务与无连接服务" tabindex="-1"><a class="header-anchor" href="#面向连接服务与无连接服务" aria-hidden="true">#</a> 面向连接服务与无连接服务</h5><ol><li><p>面向连接服务：<strong>通信前双方必须先建立连接</strong>，分配相应的资源，以保证通信能正常进行，<strong>传输结束后释放连接和资源</strong></p><p>因此这种服务可以分为连接建立、数据传输和连接释放三个阶段，如 TCP 协议</p></li><li><p>无连接服务：<strong>不需要先建立连接，可直接发送数据</strong>，把每个带有目的地址的包传送到线路上，由系统选定路线进行传输</p><p>这是一种<strong>不可靠的服务</strong>，这种服务常被描述为尽最大努力交付，如 IP、UDP 协议</p></li></ol><h5 id="可靠服务和不可靠服务" tabindex="-1"><a class="header-anchor" href="#可靠服务和不可靠服务" aria-hidden="true">#</a> 可靠服务和不可靠服务</h5><ul><li><p>可靠服务：网络具有纠错、检错、应答机制，<strong>能保证数据正确、可靠地传送到目的地</strong></p></li><li><p>不可靠服务：网络只是尽量正确、可靠地传送，而<strong>不能保证数据正确、可靠地传送到目的地</strong>，是一种尽力而为的服务</p><p>不可靠服务的网络，其网络的正确性、<strong>可靠性要由应用或用户来保障</strong>，如用户采取纠错措施把不可靠服务变成可靠服务器</p></li></ul><h5 id="有应答服务和无应答服务" tabindex="-1"><a class="header-anchor" href="#有应答服务和无应答服务" aria-hidden="true">#</a> 有应答服务和无应答服务</h5><ul><li>有应答服务：<strong>接收方在收到数据后向发送方给出相应的应答</strong>，该应答由传输系统内部自动实现，而不由用户实现</li><li>无应答服务：<strong>接收方收到数据后不自动给出应答</strong>，若需要应答，则由高层实现</li></ul><h3 id="osi-参考模型" tabindex="-1"><a class="header-anchor" href="#osi-参考模型" aria-hidden="true">#</a> OSI 参考模型</h3><p>国际标准化组织 ISO 提出的网络体系结构模型，称为开放系统互连参考模型 OSI/RM，通常简称为 OSI 参考模型</p><p>OSI 参考模型有 7 层：<strong>物理层、数据链路层、网络层、传输层、会话层、表示层、应用层</strong></p><p>低三层统称为<strong>通信子网</strong>，它是<strong>为了联网而附加的通信设备</strong>，完成数据的传输功能；高三层统称为<strong>资源子网</strong>，它相当于计算机系统，完成数据的处理等功能；<strong>传输层承上启下</strong></p><img src="'+d+'" alt="image-20211126203023985" style="zoom:150%;"><h4 id="物理层-physical-layer" tabindex="-1"><a class="header-anchor" href="#物理层-physical-layer" aria-hidden="true">#</a> 物理层 Physical Layer</h4><p>物理层的<strong>传输单位是比特</strong>，任务是透明地传输比特流，功能是在物理媒体上为数据端设备<strong>透明地传输原始比特流</strong></p><p>主要定义<u>数据终端设备 <code>DTE</code> 和数据通信设备 <code>DCE</code> 的物理与逻辑连接方法</u>，<strong>物理层协议（物理层规程）也称物理层接口标准</strong></p><p>物理层接口标准很多，如 <code>EIA-232C</code>、<code>EIA/TIA RS-449</code>、<code>CCITT</code> 的 <code>X.21</code> 等</p><p>这是两个通信结点及它们间的一段通信链路，物理层主要研究以下内容：</p><figure><img src="'+h+'" alt="image-20211126203147282" tabindex="0" loading="lazy"><figcaption>image-20211126203147282</figcaption></figure><ol><li>规定<strong>通信链路与通信结点之间接口的一些参数</strong>，如机械形状和尺寸、交换电路的数量和排列等，如网线接口</li><li>规定<strong>通信链路上传输的信号的意义和电气特征</strong>，如高电平是 1 低电平是 0</li></ol><p>注意：传输信息所利用的一些<strong>物理媒体</strong>，如双绞线、光缆、无线信道等，<strong>在物理层协议下面</strong>，可以当作第 0 层</p><h4 id="数据链路层-data-link-layer" tabindex="-1"><a class="header-anchor" href="#数据链路层-data-link-layer" aria-hidden="true">#</a> 数据链路层 Data Link Layer</h4><p>数据链路层的<strong>传输单位是帧</strong>，任务是<strong>将网络层传来的 IP 数据报组装成帧</strong></p><p>功能为物理寻址、成帧、差错控制、流量控制、传输管理、数据重发等：</p><ul><li><p>差错控制：由于外界噪声的干扰，物理层传输时高点平变成低电平，从而发生差错</p><p>两个结点之间规定一些数据链路层协议后，就可以<strong>检测出这些差错</strong>，然后把收到的错误信息<strong>丢弃</strong></p></li><li><p>流量控制：当两个性能不同的结点传送数据时，<strong>协调两个结点的速率，防止一方数据发送太快导致丢失</strong></p></li><li><p>通道控制：在广播式网络中，要处理<strong>如何控制对共享信道的访问</strong>（共享通道只能有一个人发送信息）</p><p>数据链路层的一个特殊的子层——介质访问子层，就是专门处理这个问题的</p></li></ul><p>典型的数据链路层协议有 <code>SDLC、HDLC、PPP、STP</code> 和帧中继等</p><h4 id="网络层-network-layer" tabindex="-1"><a class="header-anchor" href="#网络层-network-layer" aria-hidden="true">#</a> 网络层 Network Layer</h4><p>网络层的<strong>传输单位是数据报（分组）</strong>，它关心的是通信子网的运行控制，主要任务是<u>把网络层的协议数据单元从源端传到目的端</u>，为分组交换网上的不同主机提供通信服务</p><p>关键问题是对分组进行路由选择，并实现流量控制、拥塞控制、差错控制和网际互联等功能：</p><ul><li><p>路由选择：A 到达 B 有多条路径，路由选择就是<strong>根据网络的情况，利用相应的路由算法计算出一条合适的路径</strong></p><figure><img src="'+c+'" alt="image-20211127150451197" tabindex="0" loading="lazy"><figcaption>image-20211127150451197</figcaption></figure></li><li><p>流量控制：与数据链路层含义一样</p></li><li><p>差错控制：<strong>两节点直接约定检错规则</strong>，如奇偶校验码，接受方在接受分组时，若发现错误就进行<strong>纠正或丢弃</strong></p></li><li><p>拥塞控制：<strong>采取一定的措施来缓解拥塞状态</strong>，防止拥塞状态让网络中的结点无法正常通信</p><p>拥塞状态：上图中的结点都处于来不及接收分组而要丢弃大量分组的情况</p></li><li><p>网际互连：因特网是由大量异构网络通过路由器相互连接起来的很大的互联网，用于实现通信</p><p>因特网的网络层也称网际层或 IP 层，因为其主要协议是无连接的网际协议 IP 和许多路由选择协议</p></li></ul><p>网络层的协议有 <code>IP、IPX、ICMP、IGMP、ARP、RARP、OSPF</code> 等</p><h4 id="传输层-transport-layer" tabindex="-1"><a class="header-anchor" href="#传输层-transport-layer" aria-hidden="true">#</a> 传输层 Transport Layer</h4><p>传输层也称运输层，传输单位是<strong>报文段 TCP</strong> 或<strong>用户数据报 UDP</strong>，负责<strong>主机中两个进程之间的通信</strong>（端到端）</p><p>功能是<strong>为端到端连接提供可靠的传输服务</strong>，为端到端连接提供流量控制、差错控制、服务质量、数据传输管理等服务</p><p>使用传输层的服务，高层用户可以直接进行端到端的数据传输，从而<strong>忽略通信子网的存在</strong></p><p>由于一台主机可同时运行多个进程，因此传输层具有复月和分用的功能：</p><ul><li>复用：多个应用层进程可<strong>同时使用下面传输层的服务</strong></li><li>分用：传输层把收到的信息<strong>分别交付给上面应用层中相应的进程</strong></li></ul><p>传输层的协议有 TCP、UDP</p><h4 id="会话层-session-layer" tabindex="-1"><a class="header-anchor" href="#会话层-session-layer" aria-hidden="true">#</a> 会话层 Session Layer</h4><p>会话层<strong>允许不同主机上的各个进程之问进行会话</strong></p><p>会话：在传输层的基础上为表示层实体或用户进程建立连接并在连接上有序地传输数据</p><p>会话层负责<strong>管理主机间的会话进程</strong>，包括建立，管理及终止进程间的会话</p><p>会话层可以<strong>使用校验点使通信会话在通信失效时从校验点继续恢复通信</strong>，实现数据同步</p><h4 id="表示层-presentation-layer" tabindex="-1"><a class="header-anchor" href="#表示层-presentation-layer" aria-hidden="true">#</a> 表示层 Presentation Layer</h4><p>表示层主要处理<strong>在两个通信系统中交换信息的表示方式</strong></p><p>不同机器采用的编码和表示方法不司，使用的数据结构也不同</p><p>表示层采用抽象的标准方法定义数据结构，并采用标准的编码形式，<strong>让不同机器实现数据与信息的交换</strong></p><p><strong>数据压缩、加密和解密</strong>也是表示层可提供的数据表示变换功能</p><h4 id="应用层-application-layer" tabindex="-1"><a class="header-anchor" href="#应用层-application-layer" aria-hidden="true">#</a> 应用层 Application Layer</h4><p>应用层是 OSI 参考模型的最高层，是<strong>用户与网络的界面</strong></p><p>因为用户的实际应用多种多样，这就要求应用层采用不同的应用协议来解决不同类型的应用要求</p><p>应用层是<strong>最复杂</strong>的一层，使用的协议也<strong>最多</strong></p><p>典型的协议有用于文件传送的 FTP、用于电子邮件的 SMTP、用于万维网的 HTTP 等</p><h3 id="tcp-ip-模型" tabindex="-1"><a class="header-anchor" href="#tcp-ip-模型" aria-hidden="true">#</a> TCP/IP 模型</h3><p>ARPA 在研究 <code>ARPAnet</code> 时提出了 TCP/IP` 模型，模型从低到高依次为<strong>网络接口层、网际层、传输层和应用层</strong></p><p>TCP/IP 由于得到广泛应用而成为事实上的国际标准（现有协议后有标准）</p><figure><img src="'+u+'" alt="image-20211126203535560" tabindex="0" loading="lazy"><figcaption>image-20211126203535560</figcaption></figure><h5 id="网络接口层" tabindex="-1"><a class="header-anchor" href="#网络接口层" aria-hidden="true">#</a> 网络接口层</h5><p>类似于OSI 的物理层 + 数据链路层，<strong>表示与物理网络的接口</strong></p><p>实际上该层只是指出主机必须使用某种协议与网络连接，以便在其上传递 IP 分组</p><p>具体的物理网络既可以是各种类型的局域网，如以太网、令牌环网、令牌总线网等</p><p>也可以是诸如电话网、<code>SDH</code>、<code>X.25</code>、帧中继和 ATM 等公共数据网络</p><p>网络接口层的作用是从主机或结点<strong>接收 IP 分组，并把它们发送到指定的物理网络上</strong></p><h5 id="网际层-主机-主机" tabindex="-1"><a class="header-anchor" href="#网际层-主机-主机" aria-hidden="true">#</a> 网际层（主机-主机）</h5><p>是 TCP/IP 体系结构的<strong>关键部分</strong>，和 OSI 的网络层很相似</p><p>网际层<strong>将分组发往任何网络</strong>，并为之独立地<strong>选择合适的路由</strong></p><p>但它<strong>不保证各个分组有序地到达</strong>，各个分组的有序交付<strong>由高层负责</strong></p><p>网际层定义了标准的分组格式和协议，即 IP 协议，当前采用的 IP 协议是第 4 版，即 <code>IPv4</code>，它的下一版本是 <code>IPv6</code></p><h5 id="传输层-进程-进程" tabindex="-1"><a class="header-anchor" href="#传输层-进程-进程" aria-hidden="true">#</a> 传输层（进程-进程）</h5><p>的功能同样和 OSI 的传输层类似，即使得<strong>发送端和目的端主机上的对等实体进行会话</strong></p><p>传输层主要使用以下两种协议：</p><ol><li>传输控制协议 TCP：<strong>面向连接的</strong>，数据传输的单位是<strong>报文段</strong>，能够提供<strong>可靠的交付</strong></li><li>用户数据报协议 UDP：<strong>无连接的</strong>，数据传输的单位是<strong>用户数据报</strong>，<strong>不保证提供可靠的交付</strong>，只是尽最大努力交付</li></ol><h5 id="应用层-用户-用户" tabindex="-1"><a class="header-anchor" href="#应用层-用户-用户" aria-hidden="true">#</a> 应用层（用户-用户）</h5><p>包含<strong>所有的高层协议</strong>，如：</p><ol><li>虚拟终端协议 Telnet</li><li>文件传输协议 FTP</li><li>域名解析服务 DNS</li><li>电子邮件协议 SMTP</li><li>超文本传输协议 HTTP</li></ol><hr><p>IP 协议是因特网中的核心协议</p><p>TCP/IP 可以为各式各样的应用提供服务（everything over IP）</p><p>TCP/IP 也允许 IP 协议在由各种网络构成的互联网上运行（IP over everything）</p><h3 id="两个模型的比较" tabindex="-1"><a class="header-anchor" href="#两个模型的比较" aria-hidden="true">#</a> 两个模型的比较</h3><p>TCP/IP 模型与 OSI 参考模型的相似之处：</p><ol><li><strong>都采取分层的体系结构</strong>，将庞大且复杂的问题划分为若干较容易处理的、范围较小的问题，而且分层的功能也大体相似</li><li><strong>都是基于独立的协议栈的概念</strong></li><li><strong>都可以解决异构网络的互联</strong>，实现世界上不同厂家生产的计算机之间的通信</li></ol><figure><img src="'+m+'" alt="image-20211126203649879" tabindex="0" loading="lazy"><figcaption>image-20211126203649879</figcaption></figure><p>TCP/IP 模型与 OSI 参考模型的差别：</p><ol><li><p>OSI 精确地定义了服务、协议和接口；TCP/IP 模型在这三个概念上却没有明确区分</p></li><li><p>OSI 先模型后协议，没有偏向于任何特定的协议，<strong>通用性良好</strong>；但设计者对协议没有经验，<strong>层次划分不够好</strong></p><p>TCP/IP 先协议后模型，不会出现协议不能匹配模型的情况，但<strong>不适合于任何其他非 TCP/IP 的协议栈</strong></p></li><li><p>TCP/IP 将网际协议 IP 作为一个<strong>单独的重要层次</strong></p><p>OSI 在网络层中<strong>划分出一个子层</strong>来完成类似于 TCP/IP 模型中的 IP 的功能</p></li><li><p>OSI 在<strong>网络层支持无连接和面向连接的通信</strong>，但在<strong>传输层仅有面向连接的通信</strong></p><p>TCP/IP 在<strong>网际层仅有无连接的通信模式</strong>，但<strong>传输层支持无连接和面向连接两种模式</strong></p></li></ol><p>OSI 的缺点：</p><ol><li>基于 OSI 参考模型的<strong>软件效率极低</strong></li><li><strong>缺乏市场与商业动力，结构复杂，实现周期长，运行效率低</strong></li></ol><h3 id="五层模型" tabindex="-1"><a class="header-anchor" href="#五层模型" aria-hidden="true">#</a> 五层模型</h3><p>无论是 OSI 参考模型还是 TCP/IP 模型，都不是完美的，对二者的讨论和批评都很多</p><p>因此综合 OSI 和 TCP/IP 的优点，采用一种只有 5 层协议的体系结构：</p><figure><img src="'+P+'" alt="image-20211126203750388" tabindex="0" loading="lazy"><figcaption>image-20211126203750388</figcaption></figure><p>每个协议栈的<strong>最顶端都是一个面向用户的接口</strong>，下面各层是为通信服务的协议</p><p>通信就是一个<strong>装包和拆包</strong>的过程：</p><ol><li>用户把自己能够理解的自然语言给到应用层</li><li>从应用层开始除物理层外每层添加一些控制信息</li><li>在物理层把最终数据转换为比特流转发</li><li>到达目的端进行拆包，最后拆回自然语言给目的用户</li></ol><p>注意：数据链路层除了头部要加信息外，尾部也要加信息</p><figure><img src="'+f+'" alt="image-20211126203831425" tabindex="0" loading="lazy"><figcaption>image-20211126203831425</figcaption></figure>',207),_=[b];function x(S,T){return n(),o("div",null,_)}const C=r(I,[["render",x],["__file","第一章 计算机网络体系结构.html.vue"]]);export{C as default};
